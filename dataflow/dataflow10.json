{
	"name": "dataflow10",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "names100",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "ExternalCall1",
					"linkedService": {
						"referenceName": "Cognitive Service",
						"type": "LinkedServiceReference"
					}
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "DerivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Emp ID} as string,",
				"          {Name Prefix} as string,",
				"          {First Name} as string,",
				"          {Middle Initial} as string,",
				"          {Last Name} as string,",
				"          Gender as string,",
				"          {E Mail} as string,",
				"          {Father's Name} as string,",
				"          {Mother's Name} as string,",
				"          {Mother's Maiden Name} as string,",
				"          {Date of Birth} as string,",
				"          {Time of Birth} as string,",
				"          {Age in Yrs.} as string,",
				"          {Weight in Kgs.} as string,",
				"          {Date of Joining} as string,",
				"          {Quarter of Joining} as string,",
				"          {Half of Joining} as string,",
				"          {Year of Joining} as string,",
				"          {Month of Joining} as string,",
				"          {Month Name of Joining} as string,",
				"          {Short Month} as string,",
				"          {Day of Joining} as string,",
				"          {DOW of Joining} as string,",
				"          {Short DOW} as string,",
				"          {Age in Company (Years)} as string,",
				"          Salary as string,",
				"          {Last % Hike} as string,",
				"          SSN as string,",
				"          {Phone No. } as string,",
				"          {Place Name} as string,",
				"          County as string,",
				"          City as string,",
				"          State as string,",
				"          Zip as string,",
				"          Region as string,",
				"          {User Name} as string,",
				"          Password as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"DerivedColumn2 call(mapColumn(",
				"          documents",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     output(",
				"          headers as [string,string],",
				"          body as (documents as (redactedText as string, id as string, entities as (text as string, category as string, offset as integer, length as integer, confidenceScore as double)[])[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     format: 'rest',",
				"     store: 'restservice',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     httpMethod: 'POST',",
				"     requestFormat: ['type' -> 'json'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'singleDocument']) ~> ExternalCall1",
				"SurrogateKey1 derive(language = 'en',",
				"          text = {Last Name}) ~> DerivedColumn1",
				"source1 keyGenerate(output(id as long),",
				"     startAt: 1L) ~> SurrogateKey1",
				"DerivedColumn1 derive(documents = array(@(id=id,\r",
				"          language=language,\r",
				"          text=text))) ~> DerivedColumn2",
				"ExternalCall1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}