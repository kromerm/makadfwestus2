{
	"name": "dataflow16",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "NorthwindProds",
						"type": "DatasetReference"
					},
					"name": "NorthwindProds"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "adlsgen2folder",
						"type": "DatasetReference"
					},
					"name": "StoreOutputInLake"
				}
			],
			"transformations": [
				{
					"name": "RemoveUnnecessaryColumns"
				},
				{
					"name": "FilterOutNoStock"
				},
				{
					"name": "AvgPriceByCategory"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          ProductName as string,",
				"          SupplierID as integer,",
				"          CategoryID as integer,",
				"          QuantityPerUnit as string,",
				"          UnitPrice as decimal(19,4),",
				"          UnitsInStock as integer,",
				"          UnitsOnOrder as integer,",
				"          ReorderLevel as integer,",
				"          Discontinued as boolean,",
				"          CategoryName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> NorthwindProds",
				"NorthwindProds select(mapColumn(",
				"          ProductID,",
				"          ProductName,",
				"          QuantityPerUnit,",
				"          UnitPrice,",
				"          UnitsInStock,",
				"          UnitsOnOrder,",
				"          Discontinued,",
				"          CategoryName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveUnnecessaryColumns",
				"RemoveUnnecessaryColumns filter(UnitsInStock > 0) ~> FilterOutNoStock",
				"FilterOutNoStock aggregate(groupBy(CategoryName),",
				"     AveragePriceByCategory = round(avg(UnitPrice),2)) ~> AvgPriceByCategory",
				"AvgPriceByCategory sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          identifier as string,",
				"          createdOn as string,",
				"          modifiedOn as string,",
				"          originalTimeZoneUTCOffset as string,",
				"          sourceAuthority as string,",
				"          salutation as string,",
				"          firstName as string,",
				"          nickName as string,",
				"          middleName as string,",
				"          lastName as string,",
				"          suffix as string,",
				"          fullName as string,",
				"          birthdayDay as string,",
				"          birthdayMonth as string,",
				"          birthdayYear as string,",
				"          birthDate as string,",
				"          genderCode as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> StoreOutputInLake"
			]
		}
	}
}