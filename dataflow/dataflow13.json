{
	"name": "dataflow13",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "NewProducts",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DimProductsTable",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "exists1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as string,",
				"          ListPrice as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     enableCdc: true,",
				"     mode: 'read',",
				"     skipInitialLoad: true) ~> source1",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          EffectiveDate as timestamp,",
				"          Active as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"derivedColumn1, source2 exists(/*toString(byName('ProductNumber','source1')) == toString(byName('ProductNumber','source2'))*/\r",
				"\r",
				"toString(byName('source1@Name')) == toString(byName('source1@Name')),",
				"     negate:false,",
				"     broadcast: 'left')~> exists1",
				"source2 filter(Name == 'My Bike') ~> filter1",
				"source1 derive(Name = 'lol') ~> derivedColumn1",
				"exists1 sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice",
				"     )) ~> sink1"
			]
		}
	}
}