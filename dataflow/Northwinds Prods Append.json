{
	"name": "Northwinds Prods Append",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "NorthwindCategories",
						"type": "DatasetReference"
					},
					"name": "NorthwindCategories"
				},
				{
					"dataset": {
						"referenceName": "NorthwindsProdsFile",
						"type": "DatasetReference"
					},
					"name": "NorthwindsProdsFile"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CategoryAverages",
						"type": "DatasetReference"
					},
					"name": "UpdateCategoryAverages"
				}
			],
			"transformations": [
				{
					"name": "InnerJoin"
				},
				{
					"name": "KeepRelevantColumns"
				},
				{
					"name": "SetUpsert"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CategoryID as integer,",
				"          CategoryName as string,",
				"          Description as string,",
				"          Picture as binary",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> NorthwindCategories",
				"source(output(",
				"          CategoryName as string,",
				"          AveragePriceByCategory as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> NorthwindsProdsFile",
				"NorthwindCategories, NorthwindsProdsFile join(NorthwindCategories@CategoryName == NorthwindsProdsFile@CategoryName,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoin",
				"InnerJoin select(mapColumn(",
				"          CategoryName = NorthwindCategories@CategoryName,",
				"          Description,",
				"          CategoryName = NorthwindsProdsFile@CategoryName,",
				"          AveragePriceByCategory",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> KeepRelevantColumns",
				"KeepRelevantColumns alterRow(upsertIf(true())) ~> SetUpsert",
				"SetUpsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CategoryName as string,",
				"          Description as string,",
				"          AveragePriceByCategory as decimal(18,2)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> UpdateCategoryAverages"
			]
		}
	}
}