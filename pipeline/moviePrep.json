{
	"name": "moviePrep",
	"properties": {
		"activities": [
			{
				"name": "dawson dataflow1",
				"type": "ExecuteWranglingDataflow",
				"dependsOn": [],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "moviesWrangling",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"sinks": {
						"UserQuery": {
							"name": "Sinkfolderout",
							"dataset": {
								"referenceName": "folderout",
								"type": "DatasetReference"
							},
							"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['mymovies.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> Sinkfolderout"
						}
					}
				}
			},
			{
				"name": "ROI Function",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "dawson dataflow1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "my stored proc1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ROI Function",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "ML Notebook",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "my stored proc1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "Send Email",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "ML Notebook",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			}
		],
		"annotations": []
	}
}