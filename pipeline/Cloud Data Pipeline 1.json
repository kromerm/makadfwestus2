{
	"name": "Cloud Data Pipeline 1",
	"properties": {
		"activities": [
			{
				"name": "Acquire Taxi Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "taxi_fare_data_input1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "adlsgen2folder",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Inspect data",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Acquire Taxi Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "adlsgen2folder_copy1",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Iterator over each file",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Inspect data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Inspect data').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Notebook Aggregations",
							"type": "SynapseNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": {
										"value": "Notebook 1",
										"type": "Expression"
									},
									"type": "NotebookReference"
								},
								"parameters": {
									"myparam": {
										"value": {
											"value": "@item().name",
											"type": "Expression"
										},
										"type": "string"
									}
								},
								"snapshot": true,
								"sparkPool": {
									"referenceName": {
										"value": "marksparkpool1",
										"type": "Expression"
									},
									"type": "BigDataPoolReference"
								},
								"executorSize": "Medium",
								"conf": {
									"spark.dynamicAllocation.enabled": false,
									"spark.dynamicAllocation.minExecutors": 2,
									"spark.dynamicAllocation.maxExecutors": 2
								},
								"driverSize": "Medium",
								"numExecutors": 2
							},
							"linkedServiceName": {
								"referenceName": "AzureSynapseArtifacts1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Notebook Aggregations",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[setNames]",
								"storedProcedureParameters": {
									"Param1": {
										"value": "1",
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Clean Addresses",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Iterator over each file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "Address Quality",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Slowly Changing Dimension",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Clean Addresses",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "SCD Type 2",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Data Prep for Data science",
				"type": "ExecuteWranglingDataflow",
				"dependsOn": [
					{
						"activity": "Slowly Changing Dimension",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "TaxiWrangle",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"queries": [
						{
							"queryName": "UserQuery",
							"dataflowSinks": [
								{
									"name": "UserQueryadlsgen2folder",
									"dataset": {
										"referenceName": "adlsgen2folder",
										"type": "DatasetReference"
									},
									"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tidentifier as string,\n\t\tcreatedOn as string,\n\t\tmodifiedOn as string,\n\t\toriginalTimeZoneUTCOffset as string,\n\t\tsourceAuthority as string,\n\t\tsalutation as string,\n\t\tfirstName as string,\n\t\tnickName as string,\n\t\tmiddleName as string,\n\t\tlastName as string,\n\t\tsuffix as string,\n\t\tfullName as string,\n\t\tbirthdayDay as string,\n\t\tbirthdayMonth as string,\n\t\tbirthdayYear as string,\n\t\tbirthDate as string,\n\t\tgenderCode as string\n\t),\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQueryadlsgen2folder"
								}
							]
						},
						{
							"queryName": "DriverAggs",
							"dataflowSinks": [
								{
									"name": "DriverAggsadlsgen2folder",
									"dataset": {
										"referenceName": "adlsgen2folder",
										"type": "DatasetReference"
									},
									"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tidentifier as string,\n\t\tcreatedOn as string,\n\t\tmodifiedOn as string,\n\t\toriginalTimeZoneUTCOffset as string,\n\t\tsourceAuthority as string,\n\t\tsalutation as string,\n\t\tfirstName as string,\n\t\tnickName as string,\n\t\tmiddleName as string,\n\t\tlastName as string,\n\t\tsuffix as string,\n\t\tfullName as string,\n\t\tbirthdayDay as string,\n\t\tbirthdayMonth as string,\n\t\tbirthdayYear as string,\n\t\tbirthDate as string,\n\t\tgenderCode as string\n\t),\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DriverAggsadlsgen2folder"
								}
							]
						}
					]
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Data Prep for Data science",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Clean Addresses').output,1)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Log failure",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": "insert values (1, 1, 0, 'Pipeline failed') into ErrorLog2"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Log success",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": "insert values (1, 1, 1, 'Pipeline success') into ErrorLog2"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}